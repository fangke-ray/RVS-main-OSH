<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.osh.rvs.mapper.inline.ScheduleMapper">

	<!-- cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"> 
		</cache -->
	
	<select id="searchMaterialIdsByCondition" parameterType="ScheduleEntity" resultType="java.lang.String">
		<![CDATA[
			SELECT a.material_id from material a
			LEFT JOIN material_partial b
			ON b.material_id = a.material_id
			LEFT JOIN material_process c
			ON c.material_id = a.material_id AND c.line_id = 14
		]]>
		<where>
				a.break_back_flg = 0 
				AND (a.outline_time IS NULL OR a.outline_time >= current_date) 
				AND a.agreed_date IS NOT NULL 
				AND (fix_type = 1 OR c.line_id IS NOT NULL) -- [流水线 OR ENDOEYE]
			<if test="sorc_no!= null and sorc_no!='' ">
				and (a.sorc_no like CONCAT('%', #{sorc_no}, '%') or omr_notifi_no like CONCAT('%', #{sorc_no}, '%'))
			</if>
			<if test="serial_no!=null and serial_no!='' ">
				 and a.serial_no = #{serial_no}
			</if>
			<if test="esas_no!= null and esas_no!='' ">
				and a.esas_no = #{esas_no}
			</if>
			<if test="ocm!= null and ocm!='' ">
				and a.ocm = #{ocm}
			</if>
			<if test="direct_flg!= null and direct_flg == 1 ">
				and a.direct_flg = 1
			</if>
			<if test="direct_flg!= null and direct_flg == 0 ">
				and (a.direct_flg is null or a.direct_flg = 0)
			</if>
			<if test="agreed_date_start!= null">
				<![CDATA[ 
				and a.agreed_date >= #{agreed_date_start}
				]]>	
			</if>
			<if test="agreed_date_end!= null">
				<![CDATA[
				and a.agreed_date <= #{agreed_date_end}
				]]>
			</if>
			<if test="scheduled_date_start!= null">
				<![CDATA[ 
				and a.scheduled_date >= #{scheduled_date_start}
				]]>	
			</if>
			<if test="scheduled_date_end!= null">
				<![CDATA[
				and a.scheduled_date <= #{scheduled_date_end}
				]]>
			</if>
			<if test="inline_time_start!= null">
				<![CDATA[ 
				and a.inline_time >= #{inline_time_start}
				]]>	
			</if>
			<if test="inline_time_end!= null">
				<![CDATA[
				and date(a.inline_time) <= #{inline_time_end}
				]]>
			</if>
			<if test="level!= null and level != 9 and level != 5">
				and a.level = #{level}
			</if>
			<if test="level!= null and level == 9">
				and a.level in (9,91,92,93,96,97,98,99)
			</if>
			<if test="level!= null and level == 5">
				and a.level in (56,57,58,59)
			</if>
			<if test="levelName!= null and levelName != ''">
				and left(a.level,1) in ( ${levelName} )
			</if>
			<if test="section_id!=null and section_id!='' ">
				and a.section_id = #{section_id}
			</if>
			<if test="scheduled_expedited!=null">
				and a.scheduled_expedited = #{scheduled_expedited}
			</if>
			<if test="category_id !=null and category_id != ''">
				and a.model_id in(select model_id from model where category_id = #{category_id})					
			</if>
			<if test="complete_date_start!= null">
				<![CDATA[ 
				and c.scheduled_assign_date >= #{complete_date_start}
				]]>	
			</if>
			<if test="complete_date_end!= null">
				<![CDATA[
				and c.scheduled_assign_date <= #{complete_date_end}
				]]>
			</if>
			<if test="position_id!=null and position_id!='' ">
				<choose>
					<when test="position_eval == 0">
						<![CDATA[
						and not exists(select material_id from production_feature d where d.material_id = a.material_id and d.position_id = #{position_id} and d.operate_result NOT IN (5,8))
						]]>				
					</when>
					<when test="position_eval == 1">
						<![CDATA[
						and exists(select material_id from production_feature d where d.material_id = a.material_id and d.position_id = #{position_id} and d.operate_result NOT IN (5,8))
						and not exists(select material_id from production_feature dpf where dpf.material_id = a.material_id and dpf.position_id = #{position_id} and dpf.operate_result = 2)
						]]>
					</when>
					<when test="position_eval == 2">
						<choose>
							<when test="position_id == 32 and support_date!= null">
						<![CDATA[
						and (
						(a.level in (9,91,92,93,96,97,98,99,56,57,58,59) and a.agreed_date is not null)
						or
						exists(select material_id from production_feature d where d.material_id = a.material_id and d.position_id = #{position_id} and d.operate_result NOT IN (5,8))
						)
						]]>
							</when>
							<otherwise>
						<![CDATA[
						and exists(select material_id from production_feature d where d.material_id = a.material_id and d.position_id = #{position_id} and d.operate_result NOT IN (5,8))
						]]>
							</otherwise>
						</choose>				
					</when>
				</choose>				
			</if>
			<if test="position_id2!=null and position_id2!='' ">
				<choose>
					<when test="position_eval2 == 0">
						<if test="position_id2=='00000000046' ">
						<![CDATA[
						and not exists(select material_id from production_feature d2 where d2.material_id = a.material_id and d2.position_id in (select position_id from position where line_id = 15) and d2.operate_result NOT IN (5,8))
						]]>				
						</if>
						<if test="position_id2!='00000000046' ">
						<![CDATA[
						and not exists(select material_id from production_feature d2 where d2.material_id = a.material_id and d2.position_id = #{position_id2} and d2.operate_result NOT IN (5,8))
						]]>				
						</if>
					</when>
					<when test="position_eval2 == 1">
						<![CDATA[
						and exists(select material_id from production_feature d2 where d2.material_id = a.material_id and d2.position_id = #{position_id2} and d2.operate_result NOT IN (5,8))
						and not exists(select material_id from production_feature dpf2 where dpf2.material_id = a.material_id and dpf2.position_id = #{position_id2} and dpf2.operate_result = 2)
						]]>
					</when>
					<when test="position_eval2 == 2">
						<![CDATA[
						and exists(select material_id from production_feature d2 where d2.material_id = a.material_id and d2.position_id = #{position_id2} and d2.operate_result NOT IN (5,8))
						]]>
					</when>
				</choose>				
			</if>
			<if test="expedition_diff!= null and expedition_diff == 1">
				<![CDATA[
				and c.scheduled_date < c.scheduled_assign_date
				]]>
			</if>
			<if test="expedition_diff!= null and expedition_diff == 0">
				<![CDATA[
				and (c.scheduled_date >= c.scheduled_assign_date or c.scheduled_assign_date IS NULL)
				]]>
			</if>
			<if test="support_date!= null">
				<![CDATA[
				AND NOT EXISTS (SELECT * FROM production_feature p where material_id = a.material_id and operate_result = 3 and action_time is null)
				AND (c.scheduled_assign_date < current_date OR c.scheduled_assign_date IS Null)
				]]>
			</if>
			<if test="px == 1">
				<![CDATA[
				AND c.px IN (1, 4, 7)
				]]>
			</if>
			<if test="px == 0 or px == 2 or px == 4 or px == 7">
				<![CDATA[
				AND c.px = ${px}
				]]>
			</if>
		</where>
		group by material_id
		<if test="bo_flg!=null or arrival_plan_date_start!=null or arrival_plan_date_end!=null or arrival_delay!= null">

		HAVING 1=1
			<if test="bo_flg!=null and bo_flg == 1">
				and max(b.bo_flg = 1) = 1
			</if>
			<if test="bo_flg!=null and bo_flg == 2">
				and max(b.bo_flg = 2) = 1
				and coalesce(max(b.bo_flg in (1,9,8)), 0) = 0
			</if>
			<if test="bo_flg!=null and bo_flg == 0">
				and max(b.bo_flg = 0) = 1
				and coalesce(max(b.bo_flg in (1,2,9,8)), 0) = 0
			</if>
			<if test="support_date!= null">
				<if test="arrival_plan_date_start!=null and arrival_plan_date_start!='' ">
					<![CDATA[
						and (coalesce(max(b.bo_flg = 1), 0) = 0 OR max(b.arrival_plan_date) >= #{arrival_plan_date_start})
					]]>
				</if>
				<if test="arrival_plan_date_end!=null and arrival_plan_date_end!='' ">
					<![CDATA[
						and (coalesce(max(b.bo_flg = 1), 0) = 0 OR max(b.arrival_plan_date) <= #{arrival_plan_date_end})
					]]>
				</if>
			</if>
			<if test="support_date == null or support_date == ''">
				<if test="arrival_plan_date_start!=null and arrival_plan_date_start!='' ">
					<![CDATA[
						and max(b.arrival_plan_date) >= #{arrival_plan_date_start}
					]]>
				</if>
				<if test="arrival_plan_date_end!=null and arrival_plan_date_end!='' ">
					<![CDATA[
						and max(b.arrival_plan_date) <= #{arrival_plan_date_end}
					]]>
				</if>
			</if>
			<if test="arrival_delay!= null and arrival_delay == 1">
				<![CDATA[
				and c.scheduled_date <= max(b.arrival_plan_date)
				]]>
			</if>
			<if test="arrival_delay!= null and arrival_delay == 0">
				<![CDATA[
				and (c.scheduled_date > max(b.arrival_plan_date) or max(b.arrival_plan_date) IS NULL)
				]]>
			</if>
		</if>

			<![CDATA[
		ORDER BY 
		a.scheduled_date = current_date DESC, a.scheduled_date < current_date DESC, 
		(a.scheduled_expedited = 1) DESC, a.scheduled_date,
		a.level in (9,91,92,93,96,97,98,99) DESC, a.direct_flg DESC
				]]>

			<if test="support_count!= null">
				<![CDATA[
				LIMIT #{support_count}
				]]>
			</if>

	</select>
	
	<select id="searchMaterialByIds" resultType="ScheduleEntity">	
		<![CDATA[
		SELECT
			a.material_id,
			coalesce(omr_notifi_no, a.sorc_no) as sorc_no,
			a.esas_no,
			mdl.category_name,
			a.model_id,
			mdl.name as model_name,
			a.serial_no,
			a.level,
			a.agreed_date,
			a.direct_flg,
			a.ocm,
			a.inline_time,
			mp.arrival_plan_date,
			mp.arrival_date,
			mp.bo_flg,
			mp.bo_contents,
			mp.order_date,
			a.section_id,
			sc.name as section_name,
			-- [dismantle.action_time as dismantle_time,]
			(
			select min(action_time) from production_feature
			where position_id = 16
			and material_id = a.material_id
			group by material_id
			) as dismantle_time,
			(select p1.process_code from position p1 join production_feature p2 on p1.position_id = p2.position_id where p2.material_id = a.material_id and p1.line_id <>13 and p2.operate_result not in (5, 8) order by (1-ISNULL(p2.action_time)), p2.action_time desc limit 1) as processing_position,
			(select p1.process_code from position p1 join production_feature p2 on p1.position_id = p2.position_id where p2.material_id = a.material_id and p1.line_id =13 and p2.operate_result not in (5, 8) order by (1-ISNULL(p2.action_time)), p2.action_time desc limit 1) as ns_processing_position,
			mpd.scheduled_date as dec_plan_date,
			mpd.finish_date as dec_finish_date,
			mpn.scheduled_date as ns_plan_date,
			mpn.finish_date as ns_finish_date,
			mpc.scheduled_date as com_plan_date,
			mpc.scheduled_assign_date as com_finish_date,
			mpc.scheduled_assign_date > current_date as schedule_assigned,
			srm.service_repair_flg,
			a.am_pm,
			a.scheduled_expedited,
			a.scheduled_manager_comment,
			(coalesce(mpn.px, 0) * 10 + mpc.px) as px,
			EXISTS (SELECT * FROM production_feature p where material_id = a.material_id and operate_result = 3 and action_time is null) as break_message,
			a.scheduled_date as scheduled_date_end,
			infsa.in_pa,
			(mrt.remain_before_com_minutes + mrt.remain_minutes) as remain_minutes,
			mrt.expected_finish_time
		FROM material a
		join v_model mdl
			on a.model_id = mdl.model_id
		left join section sc
			on a.section_id = sc.section_id
		left join (select cast(material_id as unsigned) as material_id, service_repair_flg 
			from service_repair_manage where material_id like '0%') srm
			on a.material_id = `srm`.material_id
		left join (SELECT
			mpd.material_id,
			CASE
				WHEN max(mpd.bo_flg = 1) = 1
				THEN 1
				WHEN max(mpd.bo_flg in (8, 9)) = 1
				THEN 9
				WHEN max(mpd.bo_flg = 2) = 1
				THEN 2
				ELSE 0
			END bo_flg,
			max(mpd.occur_times) as occur_times,
			min(mpd.order_date) as order_date,
			min(mpd.arrival_date) as arrival_date,
			max(mpd.arrival_plan_date) as arrival_plan_date,
			coalesce(group_concat(bo_contents separator ','),
			(select group_concat(ptl.code SEPARATOR ' ') from partial ptl join material_partial_detail mpdd on ptl.partial_id = mpdd.partial_id
					where mpdd.material_id = mpd.material_id and mpdd.waiting_quantity > 0 and mpdd.status <> 2)) as bo_contents
			from material_partial mpd
			where mpd.material_id in
		]]>
			<foreach item="id" collection="list" open="(" separator="," close=")">
				#{id}
 			</foreach> 
		<![CDATA[
			group by mpd.material_id) mp
			on a.material_id = mp.material_id
		left join (
			SELECT material_id, scheduled_date, finish_date, px
			FROM material_process
			WHERE line_id = 12
			) mpd
			on a.material_id = mpd.material_id
		left join (
			SELECT material_id, scheduled_date, finish_date, px
			FROM material_process
			WHERE line_id = 13
			) mpn
			on a.material_id = mpn.material_id
		left join (
			SELECT material_id, scheduled_date, finish_date, scheduled_assign_date, px
			FROM material_process
			WHERE line_id = 14
			) mpc
			on a.material_id = mpc.material_id
		LEFT JOIN 
			(SELECT
			    fsa.`material_id`,
			    count(1) as in_pa
			FROM `for_solution_area` fsa
			WHERE			
			fsa.`solved_time` IS NULL
			GROUP BY material_id)
			infsa
			ON infsa.material_id = a.material_id
		LEFT JOIN
			material_remain_time mrt
			ON a.material_id = mrt.material_id and mrt.line_id = 14
		where
			break_back_flg = 0
			and a.material_id in
		]]>
			<foreach item="id" collection="list" open="(" separator="," close=")">
				#{id}
 			</foreach> 
	</select>
	
	<select id="searchScheduleByCondition" resultType="ScheduleEntity" parameterType="ScheduleEntity">
		<![CDATA[
			SELECT
				a.material_id,
				b.line_id,
				(select name from line where line_id=b.line_id) as line_name,
				coalesce(omr_notifi_no, a.sorc_no) as sorc_no,
				a.model_id,
				mdl.`name` as model_name,
				ctg.`name` as category_name,
				a.serial_no,
				a.level,				
				a.direct_flg,
				a.agreed_date,
				a.ocm,
				a.scheduled_expedited,
				max(mp.arrival_plan_date) as arrival_plan_date,
				CASE
					WHEN max(mp.bo_flg in (8, 9)) = 1
					THEN 9
					WHEN max(mp.bo_flg = 1) = 1
					THEN 1
					WHEN max(mp.bo_flg = 2) = 1
					THEN 2
					ELSE 0
				END bo_flg,
				a.section_id,
				(select name from section where section_id = a.section_id) as section_name,
				(select p1.process_code from position p1 join production_feature p2 on p1.position_id = p2.position_id where p2.material_id = a.material_id and p1.line_id <>13 and p2.operate_result not in (5, 8) order by (1-ISNULL(p2.action_time)), p2.action_time desc limit 1) as processing_position,
				coalesce(a.scheduled_date, (select scheduled_date from material_process where line_id=14 and  material_id = a.material_id)) as com_plan_date,
				(select scheduled_assign_date from material_process where line_id=14 and  material_id = a.material_id) as com_finish_date,
				(mrt.remain_before_com_minutes + mrt.remain_minutes) as remain_minutes,
				mrt.expected_finish_time,
				sh.plan_day_period as schedule_period,
				DATE_FORMAT((select vcf.finish_time from v_com_finish vcf WHERE a.material_id = vcf.material_id), '%H:%i') as ns_processing_position,
				b.px
				FROM material a
				JOIN material_process b ON a.material_id = b.material_id
				JOIN model mdl ON a.model_id = mdl.model_id
				JOIN category ctg ON mdl.category_id = ctg.category_id
				LEFT JOIN material_partial mp
					ON a.material_id = mp.material_id
				LEFT JOIN
					material_remain_time mrt
					ON a.material_id = mrt.material_id and mrt.line_id = 14
				LEFT JOIN schedule_history sh
					ON a.material_id = sh.material_id AND sh.scheduled_date = #{scheduled_assign_date}
				WHERE b.line_id IS NOT NULL
		]]>
		<if test="line_id != null and line_id != ''">			
			and b.line_id = #{line_id}
		</if>
		<if test="section_id != null and section_id != ''">			
			and a.section_id = #{section_id}
		</if>
		<choose>
			<when test="scheduled_assign_date !=null">
				and b.SCHEDULED_ASSIGN_DATE = #{scheduled_assign_date}
			</when>
			<otherwise>
				and b.SCHEDULED_ASSIGN_DATE = date_add(current_date, interval 1 day)
			</otherwise>
		</choose>
		group by a.material_id, b.line_id
	</select>

	<select id="searchReportScheduleByCondition" resultType="ScheduleEntity" parameterType="ScheduleEntity">
		<![CDATA[
			SELECT
				a.material_id,
				b.line_id,
				(select name from line where line_id=b.line_id) as line_name,
				coalesce(omr_notifi_no, a.sorc_no) as sorc_no,
				a.model_id,
				mdl.`name` as model_name,
				ctg.`name` as category_name,
				a.serial_no,
				a.level,				
				a.direct_flg,
				a.agreed_date,
				a.ocm,
				a.scheduled_expedited,
				(select arrival_plan_date from material_partial where material_id = a.material_id order by (1-ISNULL(arrival_plan_date)), arrival_plan_date desc limit 1) as arrival_plan_date,
				(select bo_flg from material_partial where material_id = a.material_id and bo_flg = 1 limit 1) as bo_flg,
				a.section_id,
				(select name from section where section_id = a.section_id) as section_name,
				(select p1.process_code from position p1 join production_feature p2 on p1.position_id = p2.position_id where p2.material_id = a.material_id and p1.line_id <>13 and p2.operate_result not in (5, 8) order by (1-ISNULL(p2.action_time)), p2.action_time desc limit 1) as processing_position,
				coalesce(a.scheduled_date, (select scheduled_date from material_process where line_id=14 and  material_id = a.material_id)) as com_plan_date,
				(select scheduled_assign_date from material_process where line_id=14 and  material_id = a.material_id) as com_finish_date
				FROM material a
				JOIN material_process b ON a.material_id = b.material_id
				JOIN model mdl ON a.model_id = mdl.model_id
				JOIN category ctg ON mdl.category_id = ctg.category_id
				WHERE b.line_id IS NOT NULL
		]]>
		<if test="line_id != null and line_id != ''">			
			and b.line_id = #{line_id}
		</if>
		<![CDATA[
		and b.SCHEDULED_ASSIGN_DATE >= current_date
		]]>
	</select>

	<update id="deleteSchedule" parameterType="ScheduleEntity">
		<![CDATA[
			UPDATE
				MATERIAL_PROCESS
			SET
				SCHEDULED_ASSIGN_DATE = null
			WHERE
				MATERIAL_ID = #{material_id} AND
				LINE_ID = #{line_id}
		]]>
	</update>
	
	<update id="updateToPuse" parameterType="java.lang.String">
		<![CDATA[
			UPDATE production_feature set operate_result = 3
			where material_id = #{material_id}
			and action_time = (
				select * from (select max(action_time) from production_feature where material_id = #{material_id}) as tmp
			)
		]]>
	</update>

	<select id="getWorkingOfCategories" resultType="map">
		<![CDATA[
			SELECT ctg.name, count(ctg.name) as heap FROM material m
			JOIN model mdl ON m.model_id = mdl.model_id
			JOIN category ctg ON mdl.category_id = ctg.category_id
			WHERE m.inline_time IS NOT NULL AND m.outline_time IS NULL
			AND m.break_back_flg = 0
			GROUP BY ctg.category_id, ctg.name
		]]>
	</select>
</mapper>