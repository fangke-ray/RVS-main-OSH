<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.osh.rvs.mapper.master.DevicesManageMapper">

    <!-- 设备工具品名详细 -->
    <select id="searchDeviceManage" resultType="DevicesManageEntity" parameterType="DevicesManageEntity">
		<![CDATA[ 
		select 
		    group_concat(cfm_d.check_manage_code order by cfm_d.check_manage_code separator ' ') as daily_sheet_manage_no,
		    group_concat(cfm_r.check_manage_code order by cfm_r.check_manage_code separator ' ') as regular_sheet_manage_no,
		    ot.name as responsible_operator,
		    l.name as line_name,
		    s.name as section_name,
		    p.process_code,
		    dt.name,
		    dm.devices_manage_id,
		    dm.manage_code,
		    dm.devices_type_id,
		    dm.model_name,
		    dm.manager_operator_id,
		    o.name as manager,
		    dm.manage_level,
		    dm.products_code,
		    dm.brand,
		    dm.section_id,
		    dm.line_id,
		    dm.position_id,
		    dm.responsible_operator_id,
		    dm.import_date,
		    dm.provide_date,
		    dm.waste_date,
		    dm.delete_flg,
		    op.name as updated_by,
		    dm.updated_time,
		    dm.status,
		    dm.comment,
		    dm.location,
		    CASE 
		    WHEN br.manage_id IS NULL AND dbc.manage_id IS NULL THEN
		    	-1
		    WHEN br.manage_id IS NULL AND dbc.manage_id IS NOT NULL THEN
		    	NULL
		    ELSE
				(br.inline > 0) * 4 + (br.free > 0) * 2 + (br.confirm > 0)
			END as backup_evaluation,
			bred.borrow_object_id IS NOT NULL as borrowed,
		    dbc.corresponding
		from
		    devices_manage dm
		        join
		    devices_type dt ON dt.devices_type_id = dm.devices_type_id
		        left join
		    OPERATOR O ON dm.manager_operator_id = O.OPERATOR_ID
		        join
		    OPERATOR op ON dm.updated_by = op.OPERATOR_ID
		        left join
		    operator ot ON dm.responsible_operator_id = ot.OPERATOR_ID
		        left join
		    position p ON dm.position_id = p.position_id
		        left join
		    section s ON dm.section_id = s.section_id
		        left join
		    line l ON dm.line_id = l.line_id
		        left join
		    check_file_manage cfm_d ON dm.devices_type_id = cfm_d.devices_type_id 
				and cfm_d.delete_flg != 1
				AND ((dm.status = 1 AND cfm_d.access_place = 1) OR (dm.status = 5 AND cfm_d.access_place = 9))
				AND (cfm_d.specified_model_name IS NULL OR cfm_d.specified_model_name LIKE concat('%', dm.model_name, '%'))
		        left join
		    check_file_manage cfm_r ON dm.devices_type_id = cfm_r.devices_type_id AND cfm_r.access_place = 2
				AND (dm.status = 1)
				and cfm_r.delete_flg != 1
				AND (cfm_r.specified_model_name IS NULL OR cfm_r.specified_model_name LIKE concat('%', dm.model_name, '%'))
			LEFT JOIN device_backup_corresponding dbc
				ON dm.devices_manage_id = dbc.manage_id
			LEFT JOIN 
				(
					SELECT 
						manage_id, 
						sum(free_displace_flg = 1) as free,
						sum(free_displace_flg = 0) as confirm,
						sum(coalesce(dm1.line_id = dm2.line_id, 0) AND free_displace_flg = 1) as inline
					FROM device_backup_relation dbr
					JOIN devices_manage dm1 ON dbr.manage_id = dm1.devices_manage_id
					JOIN devices_manage dm2 ON dbr.backup_manage_id = dm2.devices_manage_id
					AND dm2.status in (1, 4, 5) AND dm2.delete_flg = 0
					GROUP BY manage_id
				) br
			ON dm.devices_manage_id = br.manage_id
			LEFT JOIN 
				(
					select distinct borrow_object_id from check_unqualified_record 
					where borrow_object_id is not null and borrow_until is null
					and object_type = 1
					and happen_time > '2019-1-1'
				) bred
			ON dm.devices_manage_id = bred.borrow_object_id
		]]>
		<where>		
		        dm.delete_flg=0
		   <if test="status!=null and status!='' ">
				<![CDATA[
				and dm.status in(${status})
			    ]]>
		   </if>
		   <if test="manage_code!=null and manage_code!='' ">
				<![CDATA[
				and dm.manage_code LIKE CONCAT('%',#{manage_code},'%')
			    ]]>
			</if>
			<if test="devices_type_id!=null and devices_type_id!='' ">
				<![CDATA[
				    and dt.devices_type_id =#{devices_type_id}
			    ]]>
			</if>
			<if test="specialized!=null and specialized!='' ">
				<![CDATA[
				    and dt.specialized =#{specialized}
			    ]]>
			</if>
			<if test="model_name!=null and model_name!='' ">
				<![CDATA[
				    and dm.model_name LIKE CONCAT('%',#{model_name},'%')
			    ]]>
			</if>
			<if test="section_id!=null and section_id!='' ">
				<![CDATA[
				    and dm.section_id =#{section_id}
			    ]]>
			</if>
			<if test="line_id!=null and line_id!='' ">
				<![CDATA[
				    and dm.line_id =#{line_id}
			    ]]>
			</if>
			<if test="manage_level!=null and manage_level!='' ">
				<![CDATA[
				    and dm.manage_level = #{manage_level}
			    ]]>
			</if>
			<if test="manager_operator_id!=null and manager_operator_id!='' ">
				<![CDATA[
				    and dm.manager_operator_id = #{manager_operator_id}
			    ]]>
			</if>
			<if test="position_id!=null and position_id!='' ">
				<![CDATA[
				    and dm.position_id =#{position_id}
			    ]]>
			</if>
			<if test="comment!=null and comment!=''">
				<![CDATA[
				and  dm.comment LIKE CONCAT('%',#{comment},'%')
			    ]]>
			</if>
		</where>
		group by devices_manage_id
		ORDER BY 
			<if test="specialized!=null and specialized!='' ">
		dm.manage_code,
			</if>
		updated_time DESC
	</select>	

	<!-- 检索 -->
	<select id="searchDistribute" parameterType="DevicesManageEntity" resultType="DevicesManageEntity">
		<![CDATA[
			SELECT 
				`devices_manage_id`,
				dm.manage_code,
				dt.name,
				dm.model_name,
				sec.name AS section_name,
				line.name AS line_name,
				pos.process_code,
				manager_oper.name AS manager,
				dm.provide_date,
				provide_oper.name AS provider,
				dm.manage_level,
				dm.section_id,
				dm.location,
				dm.products_code,
			    dm.brand,
				dm.import_date,
				dm.status,
				dm.comment
			FROM 
				devices_manage dm
			JOIN
				devices_type dt
			ON
				dm.devices_type_id=dt.devices_type_id
			LEFT JOIN
				section sec 
			ON
				sec.section_id=dm.section_id
			LEFT JOIN
				line 
			ON
				line.line_id=dm.line_id
			LEFT JOIN
				position pos
			ON
				pos.position_id=dm.position_id
			LEFT JOIN
				operator manager_oper
			ON
				manager_oper.operator_id=dm.manager_operator_id
			LEFT JOIN
				operator  provide_oper
			ON
				provide_oper.operator_id=dm.updated_by
			WHERE
				dm.delete_flg=0
				AND dm.status IN(1,4)
		]]>
		<if test="manage_code!=null and manage_code!=''">
			<![CDATA[
				AND dm.manage_code LIKE CONCAT('%',#{manage_code},'%')
			]]>
		</if>
		<if test="devices_type_id!=null and devices_type_id!=''">
			<![CDATA[
				AND dt.devices_type_id=#{devices_type_id}
			]]>
		</if>
		<if test="model_name!=null and model_name!=''">
			<![CDATA[
				AND dm.model_name LIKE CONCAT('%',#{model_name},'%')
			]]>
		</if>
		<if test="section_id!=null and section_id!=''">
			<![CDATA[
			   AND dm.section_id=#{section_id}
			]]>
		</if>
		<if test="line_id!=null and line_id!=''">
			<![CDATA[
			   AND dm.line_id=#{line_id}
			]]>
		</if>
		<if test="position_id!=null and position_id!=''">
			<![CDATA[
				AND dm.position_id=#{position_id}
			]]>
		</if>
		<if test="manager_operator_id!=null and manager_operator_id!=''">
			<![CDATA[
				AND dm.manager_operator_id=#{manager_operator_id}
			]]>
		</if>
		<if test="responsible_operator_id!=null and responsible_operator_id!=''">
			<![CDATA[
				AND dm.responsible_operator_id=#{responsible_operator_id}
			]]>
		</if>
		<if test="provide_date_start!=null and provide_date_start!=''">
			<![CDATA[
				AND dm.provide_date >= #{provide_date_start}
			]]>
		</if>
		<if test="provide_date_end!=null and provide_date_end!=''">
			<![CDATA[
				AND dm.provide_date <= #{provide_date_end}
			]]>
		</if>
		<if test="manage_level!=null and manage_level!=''">
			<![CDATA[
				AND dm.manage_level=#{manage_level}
			]]>
		</if>
		order by dm.status, dm.position_id, dm.manage_code
	</select>

	<!-- 查询管理编号 -->
    <select id="searchManageCode" resultType="String" parameterType="DevicesManageEntity">
     <![CDATA[ 
			  SELECT manage_code FROM devices_manage
			  WHERE manage_code= #{manage_code} and delete_flg = 0
		]]>
		<if test="devices_manage_id!= null and devices_manage_id!= '' ">
			<![CDATA[ 
				and devices_manage_id <> #{devices_manage_id}
			]]>
		</if>
    </select>
	 <!-- 双击页面修改 -->
	<update id="updateDevicesManage" parameterType="DevicesManageEntity">
	   <![CDATA[
	   UPDATE devices_manage SET 				
				manage_code =#{manage_code},
				devices_type_id =#{devices_type_id},
				model_name=#{model_name},
				manager_operator_id =#{manager_operator_id},
				manage_level=#{manage_level},
				products_code =#{products_code},
				brand =#{brand},
				section_id=#{section_id},
				line_id =#{line_id},
				position_id =#{position_id},
				responsible_operator_id =#{responsible_operator_id},
				import_date =#{import_date},
				provide_date=#{provide_date},
				waste_date=#{waste_date},
				delete_flg=#{delete_flg},
				updated_by=#{updated_by},
				updated_time=#{updated_time},
				status=#{status},
				comment =#{comment},
				delete_flg=0
		WHERE   devices_manage_id=#{devices_manage_id}
	   ]]>
	</update>
	
	<!--批量交付 -->
	<update id="deliverDevicesManage" parameterType="DevicesManageEntity">
	   <![CDATA[
	   UPDATE devices_manage SET 
	   	]]>
	       <if test="section_id!= null and section_id!= '' ">
				<![CDATA[ 
					 section_id = #{section_id},
				]]>
			</if>	
			<if test="line_id!= null and line_id!= '' ">
				<![CDATA[ 
					 line_id = #{line_id},
				]]>
			</if>		
			<if test="position_id!= null and position_id!= '' ">
				<![CDATA[ 
					 position_id = #{position_id},
				]]>
			</if>	
			<if test="manager_operator_id!= null and manager_operator_id!= '' ">
				<![CDATA[ 
					 manager_operator_id = #{manager_operator_id},
				]]>
			</if>
			<if test="manage_code!= null and manage_code!= '' ">
				<![CDATA[ 
					 manage_code = #{manage_code},
				]]>
			</if>
		<![CDATA[	
				updated_by=#{updated_by},
				updated_time=current_timestamp,
				delete_flg=0
		    WHERE
	   		    devices_manage_id=#{devices_manage_id}
	     ]]>
	</update>
	<!-- 新建设备工具管理数据 -->
	<update id="insertDevicesManage" parameterType="DevicesManageEntity">
		   <![CDATA[
		    INSERT INTO 
		    	devices_manage
		    	(devices_manage_id,
				manage_code,
				devices_type_id,
				device_name,
				model_name,
				manager_operator_id,
				manage_level,
				products_code,
				brand,
				section_id,
				line_id,
				position_id,
				responsible_operator_id,
				import_date,
				provide_date,
				waste_date,
				delete_flg,
				updated_by,
				updated_time,
				status,
				comment
				)
		   VALUES(
			]]>
		        #{devices_manage_id},
				#{manage_code},
				#{devices_type_id},
				#{name},
				#{model_name},
				#{manager_operator_id},
				#{manage_level},
				#{products_code},
				#{brand},
				#{section_id},
				#{line_id},
				#{position_id},
				#{responsible_operator_id},
				#{import_date},
				#{provide_date},
				#{waste_date},
				0,
				#{updated_by},
				#{updated_time},
				#{status},
				#{comment}
				)
	 </update>
	 
	 <!--替换新品 -->
	<update id="replaceDevicesManage" parameterType="DevicesManageEntity">
		   <![CDATA[
		    INSERT INTO 
		    	devices_manage
				(manage_code,
				devices_type_id,
				device_name,
				model_name,
				manager_operator_id,
				manage_level,
				products_code,
				brand,
				section_id,
				line_id,
				position_id,
				responsible_operator_id,
				import_date,
				provide_date,
				waste_date,
				delete_flg,
				updated_by,
				updated_time,
				status,
				comment
				)
		   VALUES(
			]]>
				#{manage_code},
				#{devices_type_id},
				#{name},
				#{model_name},
				#{manager_operator_id},
				#{manage_level},
				#{products_code},
				#{brand},
				#{section_id},
				#{line_id},
				#{position_id},
				#{responsible_operator_id},
				#{import_date},
				#{provide_date},
				#{waste_date},
				0,
				#{updated_by},
				#{updated_time},
				#{status},
				#{comment}
				)
	 </update>
	
	<!-- 删除页面条数据 -->
	<update id="deleteDevicesManage" parameterType="DevicesManageEntity">
	   <![CDATA[
	     UPDATE devices_manage SET 
			updated_by =#{updated_by},
			updated_time = current_timestamp,
			delete_flg=1
		 WHERE 
		    devices_manage_id=#{devices_manage_id}
	   ]]>
	</update>
	
	<!-- 查询最大管理编号 -->
	<select id="searchMaxManageCode"  parameterType="DevicesManageEntity" resultType="String">
		<![CDATA[
			SELECT 
				manage_code 
			FROM 
				devices_manage
			WHERE
				manage_code LIKE CONCAT('%',#{manage_code},'%')
			ORDER BY 
				LENGTH(manage_code) DESC,manage_code DESC;
		]]>
	</select>

	<select id="getByKey"  parameterType="String" resultType="DevicesManageEntity">
	 <![CDATA[
		SELECT dm.`devices_manage_id`,
		    dm.`manage_code`,
		    dm.`devices_type_id`,
		    coalesce(dm.`device_name`, dt.`name`) as `name`,
		    dm.`device_name`,
		    dm.`model_name`,
		    dm.`location`,
		    dm.`manager_operator_id`,
		    dm.`manage_level`,
		    dm.`products_code`,
		    dm.`brand`,
		    dm.`section_id`,
		    dm.`line_id`,
		    dm.`position_id`,
		    dm.`responsible_operator_id`,
		    dm.`import_date`,
		    dm.`provide_date`,
		    dm.`waste_date`,
		    dm.`delete_flg`,
		    dm.`updated_by`,
		    dm.`updated_time`,
		    dm.`status`,
		    dm.`comment`,
		    bred.manage_content,
		    l.name as line_name,
			(br.inline > 0) * 4 + (br.free > 0) * 2 + (br.confirm > 0) as backup_evaluation,
		    dbc.corresponding
		FROM `devices_manage` dm
		JOIN `devices_type` dt
		ON dm.devices_type_id = dt.devices_type_id
	    left join
		    line l ON dm.line_id = l.line_id
		LEFT JOIN device_backup_corresponding dbc
			ON dm.devices_manage_id = dbc.manage_id
		LEFT JOIN 
			(
				SELECT 
					manage_id, 
					sum(free_displace_flg = 1) as free,
					sum(free_displace_flg = 0) as confirm,
					sum(coalesce(dm1.line_id = dm2.line_id, 0) AND free_displace_flg = 1) as inline
				FROM device_backup_relation dbr
				JOIN devices_manage dm1 ON dbr.manage_id = dm1.devices_manage_id
				JOIN devices_manage dm2 ON dbr.backup_manage_id = dm2.devices_manage_id
				AND dm2.status in (1, 4, 5) AND dm2.delete_flg = 0
				GROUP BY manage_id
			) br
		ON dm.devices_manage_id = br.manage_id
		LEFT JOIN 
			(
				select borrow_object_id, group_concat(br_dm.manage_code) as manage_content
				from check_unqualified_record br_cur
				join `devices_manage` br_dm
				ON br_cur.manage_id = br_dm.devices_manage_id
				where borrow_object_id is not null and borrow_until is null
				and object_type = 1
				and happen_time > '2019-1-1'
				group by borrow_object_id
			) bred
		ON dm.devices_manage_id = bred.borrow_object_id
		WHERE dm.`devices_manage_id` = #{devices_manage_id}
		;
		]]>
	</select>

	 <!-- 简单替换  -->
	<update id="exchange" parameterType="DevicesManageEntity">
	   <![CDATA[
		INSERT INTO `devices_manage`
		(`manage_code`, `devices_type_id`, `device_name`, `model_name`, `location`,
		`manager_operator_id`, `manage_level`, `products_code`, `brand`, `section_id`, `line_id`, `position_id`,
		`responsible_operator_id`, `import_date`, `provide_date`, `waste_date`, `delete_flg`, `updated_by`,
		`updated_time`, `status`, `comment`)
		SELECT 
		    #{manage_code} as manage_code,
		    `odm`.`devices_type_id`,
		    `odm`.`device_name`,
		    `odm`.`model_name`,
		    `odm`.`location`,
		    `odm`.`manager_operator_id`,
		    `odm`.`manage_level`,
		    `odm`.`products_code`,
		    `odm`.`brand`,
		    `odm`.`section_id`,
		    `odm`.`line_id`,
		    `odm`.`position_id`,
		    `odm`.`responsible_operator_id`,
		    current_date as `import_date`,
		    current_date as `provide_date`,
		    `odm`.`waste_date`,
		    `odm`.`delete_flg`,
		    #{updated_by} as updated_by,
		    current_timestamp as updated_time,
		    1 as `status`,
		    '' as `comment`
		FROM `devices_manage` odm
		WHERE odm.devices_manage_id=#{devices_manage_id}
	   ]]>
	</update>

	 <!-- 简单废弃  -->
	<update id="disband" parameterType="DevicesManageEntity">
	   <![CDATA[
		UPDATE devices_manage SET 				
			waste_date=current_date,
			updated_by=#{updated_by},
			updated_time=current_timestamp,
			status= 2,
			comment = concat(comment, '\n使用者替换于', current_date)
		WHERE devices_manage_id=#{devices_manage_id}
	   ]]>
	</update>

	<select id="checkProvideInPeriod"  parameterType="DevicesManageEntity" resultType="DevicesManageEntity">
	 <![CDATA[
		select provide_date,o.job_no as provider, manage_code,
		case when s.name is null then p.process_code
		else concat(s.name, ' ', p.process_code)
		end as process_code from devices_manage dm
		LEFT JOIN operator o on dm.updated_by = o.operator_id
		LEFT JOIN position p on dm.position_id = p.position_id
		LEFT JOIN section s on dm.section_id = s.section_id
		WHERE devices_manage_id=#{devices_manage_id} AND dm.provide_date between #{provide_date_start} and #{provide_date_end};
	]]>
	</select>

	<select id="checkWasteInPeriod"  parameterType="DevicesManageEntity" resultType="DevicesManageEntity">
	 <![CDATA[
		select waste_date,o.job_no as provider, manage_code,
		case when s.name is null then p.process_code
		else concat(s.name, ' ', p.process_code)
		end as process_code from devices_manage dm
		LEFT JOIN operator o on dm.updated_by = o.operator_id
		LEFT JOIN position p on dm.position_id = p.position_id
		LEFT JOIN section s on dm.section_id = s.section_id
		WHERE devices_manage_id=#{devices_manage_id} AND dm.waste_date between #{provide_date_start} and #{provide_date_end};
	]]>
	</select>

    <select id="getManageCode" resultType="DevicesManageEntity" parameterType="DevicesManageEntity">
		<![CDATA[ 
			SELECT 
			    dm.devices_manage_id,
			    dm.manage_code,
			    exists( SELECT 
			            manage_id
			        From
			            check_unqualified_record
			        WHERE
			            manage_id = dm.devices_manage_id
			                and object_type = 1
			                and (position_handle = 3
			                or position_handle is null)
			                and (product_content != 1
			                or position_handle is null)) as check_result
			FROM
			    devices_manage dm
			WHERE dm.delete_flg = 0
			    and dm.status = 5
			  	and dm.devices_type_id = #{devices_type_id}
		]]>
		<if test="model_name!= null and model_name!= '' ">
			<![CDATA[ 
				 and dm.model_name = #{model_name}
			]]>
		</if>
		ORDER BY dm.manage_code
    </select>
    <select id="getAllManageCode" resultType="DevicesManageEntity">
    	SELECT devices_manage_id, manage_code, dt.name, model_name
		FROM
			devices_manage dm
		JOIN
			devices_type dt
		ON
			dm.devices_type_id = dt.devices_type_id
		WHERE dm.delete_flg=0
		AND status in (1, 4, 5)
		ORDER BY manage_code
    </select>
    <select id="getDeviceTypeOfPosition"  parameterType="DevicesManageEntity" resultType="DevicesTypeEntity">
		SELECT 
			dt.devices_type_id,
			dt.name
		FROM
			devices_manage dm
		JOIN
			devices_type dt ON dm.devices_type_id = dt.devices_type_id
		WHERE
			dm.delete_flg = 0
			    and dm.section_id =#{section_id}
			    and dm.position_id =#{position_id}
				and status in (1 , 5)
				and manage_level = 1
		GROUP BY dt.devices_type_id
    </select>
</mapper>