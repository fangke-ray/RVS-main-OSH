<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.osh.rvs.mapper.report.WaittingTimeReportMapper">

	<!-- cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"> 
		</cache -->

	<select id="getMaterailIds" resultType="WaittingTimeReportEntity" parameterType="WaittingTimeReportEntity">
	<![CDATA[
		SELECT
			ma.material_id,
			EXISTS(SELECT 1 FROM waitting_time_report WHERE material_id = ma.material_id) AS isExists
		FROM
			material ma
		JOIN
			v_model
		ON
			ma.model_id = v_model.model_id
	]]>
	<if test="order_date_start!=null or order_date_end!=null or arrival_date_start!=null or arrival_date_end!=null">
	<![CDATA[
		JOIN 
			material_partial mp 
		ON 
			ma.material_id = mp.material_id and mp.occur_times = 1
	]]>
	</if>
	<if test="dec_px!=null">
	<![CDATA[
		JOIN 
			material_process dec_mp 
		ON 
			ma.material_id = dec_mp.material_id AND dec_mp.line_id = 12
	]]>
	</if>
	<if test="ns_px!=null">
	<![CDATA[
		JOIN 
			material_process ns_mp 
		ON 
			ma.material_id = ns_mp.material_id AND ns_mp.line_id = 13
	]]>
	</if>
	<if test="com_px!=null">
	<![CDATA[
		JOIN 
			material_process com_mp 
		ON 
			ma.material_id = com_mp.material_id AND com_mp.line_id = 14
	]]>
	</if>
	<![CDATA[
		WHERE
			ma.outline_time IS NOT NULL
		AND
			ma.break_back_flg = 0
		AND
			ma.fix_type in (1,2)
	]]>
	<if test="category_id!=null and category_id!='' ">
	<![CDATA[
		AND v_model.category_id = #{category_id}
	]]>
	</if>
	<if test="omr_notifi_no!=null and omr_notifi_no!='' ">
	<![CDATA[
		AND (ma.sorc_no LIKE CONCAT('%', #{omr_notifi_no}, '%') OR ma.omr_notifi_no LIKE CONCAT('%', #{omr_notifi_no}, '%'))
	]]>
	</if>
	<if test="serial_no!=null and serial_no!='' ">
	<![CDATA[
		AND ma.serial_no LIKE CONCAT('%', #{serial_no}, '%')
	]]>
	</if>
	<if test="model_id!=null and model_id!='' ">
	<![CDATA[
		AND v_model.model_id = #{model_id}
	]]>
	</if>
	<if test="level eq null">
	<![CDATA[
		AND ma.level IN(1,2,3)
	]]>
	</if>
	<if test="(level eq 1) or (level eq 2) or (level eq 3)">
	<![CDATA[
		AND ma.level = #{level}
	]]>
	</if>
	<if test="level eq 5">
	<![CDATA[
		AND ma.level IN (56,57,58,59)
	]]>
	</if>
	<if test="level eq 9">
	<![CDATA[
		AND ma.level IN (91,92,93,94,96,97,98,99)
	]]>
	</if>
	<if test="section_id!=null and section_id!='' ">
	<![CDATA[
		AND ma.section_id = #{section_id}
	]]>
	</if>
	<if test="bo_flg!=null">
	<![CDATA[
		AND EXISTS(select 1 from material_partial where material_id = ma.material_id and bo_flg = #{bo_flg}) 
	]]>
	</if>
	<if test="scheduled_expedited!=null and scheduled_expedited==1">
	<![CDATA[
		AND ma.scheduled_expedited > 0
	]]>
	</if>
	<if test="scheduled_expedited!=null and scheduled_expedited==2">
	<![CDATA[
		AND ma.scheduled_expedited = 0
	]]>
	</if>
	<if test="rework!=null and rework==2">
	<![CDATA[
		AND NOT EXISTS(select 1 from production_feature where material_id = ma.material_id and operate_result = 8)
	]]>
	</if>
	<if test="direct_flg!=null">
	<![CDATA[
		AND ma.direct_flg = #{direct_flg}
	]]>
	</if>
	<if test="outline_time_start!=null">
	<![CDATA[
		AND ma.outline_time >= #{outline_time_start}
	]]>
	</if>
	<if test="outline_time_end!=null">
	<![CDATA[
		AND ma.outline_time < DATE_ADD(#{outline_time_end},INTERVAL 1 DAY)
	]]>
	</if>
	<if test="order_date_start!=null">
	<![CDATA[
		AND mp.order_date >= #{order_date_start}
	]]>
	</if>
	<if test="order_date_end!=null">
	<![CDATA[
		AND mp.order_date <= #{order_date_end}
	]]>
	</if>
	<if test="arrival_date_start!=null">
	<![CDATA[
		AND mp.arrival_date >= #{arrival_date_start}
	]]>
	</if>
	<if test="arrival_date_end!=null">
	<![CDATA[
		AND mp.arrival_date <= #{arrival_date_end}
	]]>
	</if>
	<if test="dec_px == 1">
	<![CDATA[
		AND dec_mp.px = 0
	]]>
	</if>
	<if test="dec_px == 2">
	<![CDATA[
		AND dec_mp.px = 1
	]]>
	</if>
	<if test="dec_px == 3">
	<![CDATA[
		AND dec_mp.px = 2
	]]>
	</if>
	<if test="ns_px == 1">
	<![CDATA[
		AND ns_mp.px = 0
	]]>
	</if>
	<if test="ns_px == 2">
	<![CDATA[
		AND ns_mp.px = 1
	]]>
	</if>
	<if test="ns_px == 3">
	<![CDATA[
		AND ns_mp.px = 2
	]]>
	</if>
	<if test="com_px == 0">
	<![CDATA[
		AND com_mp.px = 0
	]]>
	</if>
	<if test="com_px == 1">
	<![CDATA[
		AND com_mp.px in (1, 4, 7)
	]]>
	</if>
	<if test="com_px == 2">
	<![CDATA[
		AND com_mp.px = 2
	]]>
	</if>
	<if test="com_px == 3">
	<![CDATA[
		AND com_mp.px = 3
	]]>
	</if>
	<if test="com_px == 4">
	<![CDATA[
		AND com_mp.px = 4
	]]>
	</if>
	<if test="com_px == 7">
	<![CDATA[
		AND com_mp.px = 7
	]]>
	</if>
	</select>

	<select id="search" resultType="WaittingTimeReportEntity" parameterType="list">
	<![CDATA[
		SELECT
			SUM(wtr.wait_partial_distrubute_time) AS wait_partial_distrubute_time,
			SUM(wtr.desc_work_time) AS desc_work_time,
		    SUM(wtr.desc_wait_time) AS desc_wait_time,
		    SUM(wtr.desc_drying_time) AS desc_drying_time,
		    SUM(wtr.ns_work_time) AS ns_work_time,
		    SUM(wtr.ns_wait_time) AS ns_wait_time,
		    SUM(wtr.ns_drying_time) AS ns_drying_time,
		    SUM(wtr.com_work_time) AS com_work_time,
		    SUM(wtr.com_wait_time) AS com_wait_time,
		    SUM(wtr.com_drying_time) AS com_drying_time,
		    SUM(wtr.wait_bo_partial_time) AS wait_bo_partial_time,
		    SUM(wtr.exception_break_time) AS exception_break_time,
		    SUM(wtr.total_work_time) AS total_work_time,
		    COUNT(*) AS number,
		    ma.level
		FROM 
			waitting_time_report wtr
		JOIN
			material ma
		ON
			wtr.material_id = ma.material_id
		WHERE
			wtr.material_id IN
	]]>
	<foreach item="material_id" collection="list" open="(" separator="," close=")">
	<![CDATA[
		#{material_id}
	]]>
	</foreach> 
	<![CDATA[
		GROUP BY 
			ma.level
	]]>
	</select>
	
	<select id="searchDetails" resultType="WaittingTimeReportEntity" parameterType="list">
	<![CDATA[
		SELECT
			ma.material_id,
			ma.outline_time AS outline_date,
			coalesce(ma.omr_notifi_no,ma.sorc_no) AS omr_notifi_no,
		    model.name AS model_name,
		    ma.level,
			wtr.inline_time,
			wtr.outline_time,
			wtr.wait_partial_distrubute_time,
			wtr.desc_work_time,
		    wtr.desc_wait_time,
		    wtr.ns_work_time,
		    wtr.ns_wait_time,
		    wtr.com_work_time,
		    wtr.com_wait_time,
		    wtr.bo_flg,
		    wtr.rework,
		    wtr.wait_bo_partial_time,
		    wtr.exception_break_time,
		    wtr.total_wait_time,
		    wtr.total_work_time
		FROM 
			waitting_time_report wtr
		JOIN
			material ma
		ON
			wtr.material_id = ma.material_id
		JOIN
			model
		ON
			ma.model_id = model.model_id
		WHERE
			wtr.material_id IN
	]]>
	<foreach item="material_id" collection="list" open="(" separator="," close=")">
	<![CDATA[
		#{material_id}
	]]>
	</foreach> 
	</select>

	<select id="searchBoldDetails" resultType="WaittingTimeReportEntity" parameterType="list">
	<![CDATA[
	SELECT
		material_id,
		outline_time,
		omr_notifi_no,
		model_name,
		level,
		inline_time,
		order_date_start,
		order_date_end,
		com_drying_time,
		f_diffminutes(order_date_start, order_date_end) as wait_partial_distrubute_time,
		f_diffminutes(order_date_end, inline_time) as inline_trans_time,
		exists(select 1 from material_partial where material_id = aldr.material_id and bo_flg in (1,2)) as bo_flg
	FROM (
		SELECT
			ma.material_id,
			ma.outline_time,
			ma.omr_notifi_no,
		    model.name AS model_name,
		    ma.level,
            ma.inline_time,
			(select order_time from material_partial
				where material_id = ma.material_id
				and occur_times = 1) as order_date_start,
			(select min(recent_signin_time) from material_partial_detail 
				where material_id = ma.material_id
				and status <= 4) as order_date_end,
			sum(dj.drying_time) as com_drying_time
		FROM 
			material ma
		JOIN
			model
		ON
			ma.model_id = model.model_id
		LEFT JOIN 
			drying_process dp
		ON
			ma.material_id = dp.material_id
		LEFT JOIN
			drying_job dj
		ON
			dp.drying_job_id = dj.drying_job_id
		WHERE
			ma.material_id in
	]]>
	<foreach item="material_id" collection="list" open="(" separator="," close=")">
	<![CDATA[
		#{material_id}
	]]>
	</foreach> 
	<![CDATA[
		GROUP BY ma.material_id
	) aldr
	]]>
	</select>

	<select id="getTimeNodes" resultType="map" parameterType="list">
	<![CDATA[
	select material_id,
		nd1,nd2,nd3,nd4,nd5,nd6,coalesce(nd7,nd7_1) as nd7,nd7_1,nd8,nd9_1,nd9,nd11,nd12,nd13,nd14,nd15,nd15_2,nd16,
		f_ab_diffminutes(coalesce(nd1,nd2),
			greatest(coalesce(nd2,'2000-1-1'), nd3)
		) as a1,
		case when cds is not null and cds < 28500 then round(cds / 60) 
			else f_diffminutes(nd4,nd5) end as m2,
		f_ab_diffminutes(
			greatest(coalesce(nd2,'2000-1-1'), nd3)
		,nd5) as a2,
		round(quote / 60) as t3,
		f_ab_diffminutes(nd5,coalesce(nd7,nd7_1)) as a3,
		f_diffminutes(nd9_1,nd9) as t4,
		f_ab_diffminutes(coalesce(nd7,nd7_1),nd8) as h4,
		f_ab_diffminutes(greatest(nd7_1, nd8), nd9) as a4,
		round(inline / 60) as t6,
		f_ab_diffminutes(nd9,nd12) as a6,
		round(qa / 60) as t7,
		f_ab_diffminutes(nd12,nd14) as a7,
		f_diffminutes(nd15,coalesce(nd16, nd15_2)) as t8,
		f_ab_diffminutes(nd14,coalesce(nd16, nd15_2)) as a8,
		f_ab_diffminutes(coalesce(nd1, nd2, nd3), coalesce(nd7,nd7_1)) as pre,
		f_ab_diffminutes(greatest(nd7_1, nd8), coalesce(nd16, nd15_2)) as post,
		cds_m
	from (
		select 
			ma.material_id,
			nd.sorc_reception as nd1,
			ma.reception_time as nd2,
			min(CASE WHEN pos.special_page = 'acceptance' THEN pf.finish_time END) as nd3,
			min(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result != 5 THEN pf.action_time END) as nd4,
			max(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result = 2 THEN pf.finish_time END) as nd5,
            group_concat(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result = 2 THEN pf.pcs_inputs END) as cds_m,
			min(CASE WHEN pos.special_page = 'quotation' OR pos.process_code = '141' THEN pf.action_time END) as nd6,
			(select min(pause_start_time) from pause_feature 
				where material_id = ma.material_id
				and reason in (73,74)
				and position_id in (select position_id from position where special_page = 'quotation')
			) as nd7,
			max(CASE WHEN pos.special_page = 'quotation' THEN pf.finish_time END) as nd7_1,
			coalesce(nd.customer_agreement, ma.agreed_date) as nd8,
			coalesce(nd.sap_inline, nd.customer_agreement, ma.agreed_date) as nd9_1,
			ma.inline_time as nd9,
			min(CASE WHEN ln.inline_flg = 1 AND process_code != '301' THEN pf.action_time END) as nd11,
			max(CASE WHEN ln.inline_flg = 1 THEN pf.finish_time END) as nd12,
			min(CASE WHEN pos.special_page = 'qualityAssurance' THEN pf.action_time END) as nd13,
			ma.outline_time as nd14,
			min(CASE WHEN pos.special_page = 'shipping' THEN pf.action_time END) as nd15,
			max(CASE WHEN pos.special_page = 'shipping' THEN pf.finish_time END) as nd15_2,
			nd.shipment as nd16,
			sum(CASE WHEN pos.process_code in ('121') and pf.operate_result != 5 THEN pf.use_seconds END) as cds,
			sum(CASE WHEN pos.special_page = 'quotation' OR pos.process_code = '141' THEN pf.use_seconds END) as quote,
			sum(CASE WHEN ln.inline_flg = 1 THEN pf.use_seconds END) as inline,
			sum(CASE WHEN pos.special_page = 'qualityAssurance' THEN pf.use_seconds END) as qa
		from 
			material ma 
		left join
			material_time_node nd
			on ma.material_id = nd.material_id
		join
			production_feature pf
			on ma.material_id = pf.material_id
		join
			position pos
			on pf.position_id = pos.position_id
		join
			line ln
			on pos.line_id = ln.line_id
		where ma.material_id in 
		]]>
		<foreach item="material_id" collection="list" open="(" separator="," close=")">
		<![CDATA[
			#{material_id}
		]]>
		</foreach> 
		group by ma.material_id) aldr;
	</select>

	<select id="getTimeNodesWithNatureLt" resultType="map" parameterType="list">
	<![CDATA[
	select material_id,
		nd1,nd2,nd3,nd4,nd5,nd6,coalesce(nd7,nd7_1) as nd7,nd7_1,nd8,nd9_1,nd9,nd11,nd12,nd13,nd14,nd15,nd15_2,nd16,
		f_n_diffminutes(coalesce(nd1,nd2),
			greatest(coalesce(nd2,'2000-1-1'), nd3)
		) as a1,
		f_n_diffminutes(nd4,nd5) as m2,
		f_n_diffminutes(
			greatest(coalesce(nd2,'2000-1-1'), nd3)
		,nd5) as a2,
		round(quote / 60) as t3,
		f_n_diffminutes(nd5,coalesce(nd7,nd7_1)) as a3,
		f_diffminutes(nd9_1,nd9) as t4,
		f_n_diffminutes(coalesce(nd7,nd7_1),nd8) as h4,
		f_n_diffminutes(greatest(nd7_1, nd8), nd9) as a4,
		round(inline / 60) as t6,
		f_n_diffminutes(nd9,nd12) as a6,
		round(qa / 60) as t7,
		f_n_diffminutes(nd12,nd14) as a7,
		f_diffminutes(nd15,coalesce(nd16, nd15_2)) as t8,
		f_n_diffminutes(nd14,coalesce(nd16, nd15_2)) as a8,
		f_n_diffminutes(coalesce(nd1, nd2, nd3), coalesce(nd7,nd7_1)) as pre,
		f_n_diffminutes(greatest(nd7_1, nd8), coalesce(nd16, nd15_2)) as post,
		cds_m
	from (
		select 
			ma.material_id,
			nd.sorc_reception as nd1,
			ma.reception_time as nd2,
			min(CASE WHEN pos.special_page = 'acceptance' THEN pf.finish_time END) as nd3,
			min(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result != 5 THEN pf.action_time END) as nd4,
			max(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result = 2 THEN pf.finish_time END) as nd5,
            group_concat(CASE WHEN pos.process_code in ('121', '131') and pf.operate_result = 2 THEN pf.pcs_inputs END) as cds_m,
			min(CASE WHEN pos.special_page = 'quotation' OR pos.process_code = '141' THEN pf.action_time END) as nd6,
			(select min(pause_start_time) from pause_feature 
				where material_id = ma.material_id
				and reason in (73,74)
				and position_id in (select position_id from position where special_page = 'quotation')
			) as nd7,
			max(CASE WHEN pos.special_page = 'quotation' THEN pf.finish_time END) as nd7_1,
			coalesce(nd.customer_agreement, ma.agreed_date) as nd8,
			coalesce(nd.sap_inline, nd.customer_agreement, ma.agreed_date) as nd9_1,
			ma.inline_time as nd9,
			min(CASE WHEN ln.inline_flg = 1 AND process_code != '301' THEN pf.action_time END) as nd11,
			max(CASE WHEN ln.inline_flg = 1 THEN pf.finish_time END) as nd12,
			min(CASE WHEN pos.special_page = 'qualityAssurance' THEN pf.action_time END) as nd13,
			ma.outline_time as nd14,
			min(CASE WHEN pos.special_page = 'shipping' THEN pf.action_time END) as nd15,
			max(CASE WHEN pos.special_page = 'shipping' THEN pf.finish_time END) as nd15_2,
			nd.shipment as nd16,
			sum(CASE WHEN pos.special_page = 'quotation' OR pos.process_code = '141' THEN pf.use_seconds END) as quote,
			sum(CASE WHEN ln.inline_flg = 1 THEN pf.use_seconds END) as inline,
			sum(CASE WHEN pos.special_page = 'qualityAssurance' THEN pf.use_seconds END) as qa
		from 
			material ma 
		left join
			material_time_node nd
			on ma.material_id = nd.material_id
		join
			production_feature pf
			on ma.material_id = pf.material_id
		join
			position pos
			on pf.position_id = pos.position_id
		join
			line ln
			on pos.line_id = ln.line_id
		where ma.material_id in 
		]]>
		<foreach item="material_id" collection="list" open="(" separator="," close=")">
		<![CDATA[
			#{material_id}
		]]>
		</foreach> 
		group by ma.material_id) aldr;
	</select>

</mapper>